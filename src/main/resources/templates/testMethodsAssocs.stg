testAssocBody(sourceClass, targetClass, sourceAssocName, targetAssocName, sourceManyCardinality, targetManyCardinality) ::=
<<
    @Test
    void testAssoc<cap(sourceAssocName)>() {

        AtomicReference\<PropertyChangeEvent> event = new AtomicReference\<>();
        PropertyChangeListener listener = event::set;

        <sourceClass> object = new <sourceClass>();
        object.addPropertyChangeListener("<sourceAssocName>", listener);

        <targetClass> target = new <targetClass>();

        <if(sourceManyCardinality)><get("object", sourceAssocName, "is(empty())")><else><get("object", sourceAssocName, "is(nullValue())")><endif>
        assertThat(object.<if(sourceManyCardinality)>with<else>set<endif><cap(sourceAssocName)>(target), is(sameInstance(object)));
        <if(sourceManyCardinality)><get("object", sourceAssocName, "contains(target)")><else><get("object", sourceAssocName, "is(sameInstance(target))")><endif>
        <if(targetManyCardinality)><get("target", targetAssocName, "contains(object)")><else><get("target", targetAssocName, "is(sameInstance(object))")><endif>

        assertThat(event.get(), is(notNullValue()));
        assertThat(event.get().getPropertyName(), is(equalTo("<sourceAssocName>")));
        assertThat(event.get().getOldValue(), is(nullValue()));
        assertThat(event.get().getNewValue(), is(sameInstance(target)));

        event.set(null);
        object.removePropertyChangeListener("<sourceAssocName>", listener);
        object.<if(sourceManyCardinality)>without<cap(sourceAssocName)>(target)<else>set<cap(sourceAssocName)>(null)<endif>;

        assertThat(event.get(), is(nullValue()));

        object.addPropertyChangeListener(listener);
        object.<if(sourceManyCardinality)>with<else>set<endif><cap(sourceAssocName)>(target);

        assertThat(event.get(), is(notNullValue()));
        assertThat(event.get().getPropertyName(), is(equalTo("<sourceAssocName>")));
        assertThat(event.get().getOldValue(), is(nullValue()));
        assertThat(event.get().getNewValue(), is(sameInstance(target)));

        event.set(null);
        object.removePropertyChangeListener(listener);
        object.<if(sourceManyCardinality)>without<cap(sourceAssocName)>(target)<else>set<cap(sourceAssocName)>(null)<endif>;

        assertThat(event.get(), is(nullValue()));

        assertThat(<sourceClass>.PROPERTY_<sourceAssocName>, is(equalTo("<sourceAssocName>")));
    }
>>

get(object, sourceAssocName, expected) ::=
<%
assertThat(<object>.get<cap(sourceAssocName)>(), <expected>);
%>

cap(n) ::=
<%
<n; format="cap">
%>